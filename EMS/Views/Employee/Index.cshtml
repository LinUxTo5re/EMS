@model EmployeeBusinessLayer.Models.EmployeeDetails
<h2 class="d-flex justify-content-center align-items-center"><b>Employee Management System</b></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h5 class="text-info"> Add Employee Details</h5>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group d-flex flex-row mb-2">
            @Html.LabelFor(model => model.EmployeeName, "Employee Name: ", htmlAttributes: new { @class = "control-label col-md-2 fw-normal fs-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control border border-1 border-dark" } })
                @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex flex-row mb-2">
            @Html.LabelFor(model => model.EmployeeCode, "Employee Code: ", htmlAttributes: new { @class = "control-label col-md-2 fw-normal fs-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeCode, new { htmlAttributes = new { @class = "form-control border border-1 border-dark" } })
                @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex flex-row mb-2">
            @Html.LabelFor(model => model.MailID, "Email ID: ", htmlAttributes: new { @class = "control-label col-md-2 fw-normal fs-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MailID, new { htmlAttributes = new { @class = "form-control border border-1 border-dark" } })
                @Html.ValidationMessageFor(model => model.MailID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex flex-row mb-2">
            @Html.LabelFor(model => model.ContactNumber, "Mobile Number: ", htmlAttributes: new { @class = "control-label col-md-2 fw-normal fs-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control border border-1 border-dark" } })
                @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex flex-row mb-2">
            @Html.LabelFor(model => model.Gender, "Gender: ", htmlAttributes: new { @class = "control-label col-md-2 fw-normal fs-4" })
            <div class="col-md-10">
                @Html.DropDownList("Gender", new List<SelectListItem>
     {
         new SelectListItem{Text = "Male", Value = "Male"},
         new SelectListItem{Text = "Female", Value="Female"}
     },
     "Select Gender", new { htmlAttribute = new { @class = "from-control border border-1 border-dark" } }
     )
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 my-4">
                <input type="submit" value="Create" class=" btn btn-primary col-md-2 mr-4" />
                <input type="reset" class=" btn btn-primary col-md-2 mx-5" />            
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
